name: Example workflow for Python using Snyk

on: push
      
jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt
      #   continue-on-error: true # To make sure that SARIF upload gets called

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      # - name: run Snyk Code Test
      #   run: snyk code test
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   continue-on-error: true  # Allow the workflow to continue even if vulnerabilities are found here         
      # - name: 🔍 Run Semgrep for SAST
      #   uses: returntocorp/semgrep-action@v1
      #   with:
      #     config: auto
      # - name: Run Snyk to check for vulnerabilities
      #   uses: snyk/actions/python-3.10@master
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   with:
      #     args: --sarif-file-output=snyk.sarif
      # - name: Upload result to Github Code Scanning
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: snyk.sarif

      - name: Run Snyk Code Test (SAST)
        id: snyk_code_test
        run: snyk code test --json-file-output=snyk_code_report.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Check if SAST Findings Exist
        id: check_sast_findings
        run: |
          echo "Checking for SAST findings..."
          if [[ -s snyk_code_report.json ]]; then
            if jq -e '.vulnerabilities | length > 0' snyk_code_report.json > /dev/null; then
              echo "SAST findings detected"
              echo "findings=true" >> $GITHUB_ENV
            else
              echo "No SAST findings detected"
              echo "findings=false" >> $GITHUB_ENV
            fi
          else
            echo "Snyk report file is empty or missing"
            echo "findings=false" >> $GITHUB_ENV
          fi

      - name: Process SAST Findings
        if: env.findings == 'true'
        run: |
          echo "Processing SAST findings..."
          jq -r '.vulnerabilities[] | "\(.severity) - \(.title) \(.id): \(.description)\nPath: \(.path), line \(.line)\n"' snyk_code_report.json > snyk_code_issues.txt

      - name: Create and Push Fix Branch
        if: env.findings == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout -b snyk-fix-branch
          echo "Applying fixes..." # Here you would apply actual fixes, if possible
          git add .
          git commit -m "fix: apply Snyk fixes"
          git push --set-upstream origin snyk-fix-branch

      - name: Create Pull Request
        if: env.findings == 'true'
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "fix: apply Snyk fixes"
          branch: snyk-fix-branch
          title: "fix: apply Snyk fixes"
          body: |
            This PR includes fixes for vulnerabilities found by Snyk.
            ```
            $(cat snyk_code_issues.txt)
            ```
          labels: snyk, security